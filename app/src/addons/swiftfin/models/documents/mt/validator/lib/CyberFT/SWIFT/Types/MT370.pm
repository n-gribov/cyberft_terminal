package CyberFT::SWIFT::Types::MT370;
use CyberFT::SWIFT::Types::Utils;
use strict;

our $ValidationProfile = {

    fields => [
        # Обязательная последовательность А Общая информация
        {
            key => '16R', # Значение: GENL
            required => 1,
        },
        {
            key => '20C', # Значение: SEME//.*
            required => 1,
        },
        {
            key => '23G',
            required => 1,
        },
        {
            key => '98a', # Значение: PREP//.*
            key_regexp => '98[ACE]',
            required => 0,
        },
        # ---> Необязательная повторяющаяся подпоследовательность А1 Связки
        {
            key => '16R', # Значение: LINK
            required => 0, # Это поле обязательно, если данная последовательность присутствует.
        },
        {
            key => '20C',
            required => 0, # Это поле обязательно, если данная последовательность присутствует.
        },
        {
            key => '16S', # Значение: LINK
            required => 0, # Это поле обязательно, если данная последовательность присутствует.
        },
        # ---| Окончание подпоследовательности А1 Связки
        {
            key => '95P', # Значение: PTYA//.*
            required => 1,
        },
        {
            key => '95P', # Значение: PTYB//.*
            required => 1,
        },
        {
            key => '16S', # Значение: GENL
            required => 1,
        },
        # Окончание последовательности А Общая информация
        # Обязательная последовательность В Детали позиции неттинга
        {
            key => '16R', # Значение: NETPOS
            required => 1,
        },
        {
            key => '20C', # Значение: NETT//.*
            required => 1,
        },
        {
            key => '98a', # Значение: NETT//.*
            key_regexp => '98[AC]',
            required => 0,
        },
        {
            key => '97A', # Значение: CASH//.*
            required => 0,
        },
        {
            key => '19A', # Значение: NETT//.*
            required => 1,
        },
        {
            key => '22H', # Значение: RECP//.*
            required => 1,
        },
        {
            key => '98A', # Значение: VALU//.*
            required => 1,
        },
        {
            key => '99A', # Значение: TRAD//.*
            required => 0,
        },
        # --->
        {
            key => '22F', # Значение: TRAN//.*
            required => 0,
        },
        # ---|
        # --->
        {
            key => '70E', # Значение: ADTX//.*
            required => 0,
        },
        # ---|
        # Необязательная повторяющаяся подпоследовательность В1 Стороны
        {
            key => '16R', # Значение: CSHPRTY
            required => 0, # Это поле обязательно, если данная последовательность присутствует.
        },
        {
            key => '95a',
            key_regexp => '95[POR]',
            required => 0, # Это поле обязательно, если данная последовательность присутствует.
        },
        {
            key => '97A',
            required => 0,
        },
        {
            key => '16S', # Значение: CSHPRTY
            required => 0, # Это поле обязательно, если данная последовательность присутствует.
        },
        # Окончание подпоследовательности В1 Стороны
        {
            key => '16S', # Значение: NETPOS
            required => 1,
        },
        # Окончание последовательности В Детали позиции неттинга
    ],

    rules => [
        # C1. Если данное сообщение направляется для отмены ранее направленных инструкций, то есть, если
        # поле 23 G «Функция сообщения» содержит код CANC, или сообщения является попракаой, то хотя
        # бы один раз в сообщении должно присутствовать поле :20C::PREV в подпоследовательности А1
        # (Код ошибки Е08).

        {
            if => ['match', '23G', '(AMND|CANC)'],
            must => [
                ['match_any', '16R', 'LINK'],
                ['match_any', '20C', 'PREV'],
            ],
            err => 'E08',
        },
        {
            if => ['not_match', '23G', '(AMND|CANC)'],
            must => ['not_match', '20C', 'PREV'],
            err => 'E08',
        },

        # С2. В последовательности B Детали позиции неттинга, в поле :19A::NETT, если значение Суммы
        # равно «0» (ноль), то поле :22H:: RECP должно содержать код NOPA.
        # В последовательности B Детали позиции неттинга, в поле :19A::NETT, если значение Суммы
        # не равно «0» (ноль), то поле :22H:: RECP не должно содержать код NOPA. (Код ошибки D57).
        {
            if => ['match', '19A', 'NETT//.*[A-Z]{3}0\s*$'],
            must => ['match', '22H', 'RECP//.*NOPA'],
            err => 'D57',
        },
        {
            if => ['not_match', '19A', 'NETT//.*[A-Z]{3}0\s*$'],
            must => ['not_match', '22H', 'RECP//.*NOPA'],
            err => 'D57',
        },

        # С3. Если в последовательности B Детали позиции неттинга, в поле :22H:: RECP определитель равен
        # PAYO или RECE, то подпоследовательность В1 Стороны должна присутствовать дважды, один раз
        # с полем :95а::ACCW и один раз с полем :95а::BENM.
        # Если в последовательности B Детали позиции неттинга, в поле :22H:: RECP определитель равен
        # NOPA, то подпоследовательность В1 Стороны не должна присутствовать (Код ошибки E89).
        {
            if => ['match', '22H', 'RECP//.*(PAYO|RECE)'],
            must => [
                ['match_any', '95[POR]', ':ACCW'],
                ['match_any', '95[POR]', ':BENM'],
            ],
            err => 'E89',
        },
        {
            if => ['match', '22H', 'RECP//.*NOPA'],
            must => ['not_match', '16R', 'CHSPRTY'],
            err => 'E89',
        },

        # С4 Следующие поля не могут появляться более одного раза в сообщении (Код ошибки E84).
        # Подпоследовательность B1 Стороны
        # :95а::INT2
        # :95а::INT1
        # :95а::ACCW
        # :95а::BENM
        {
            func => sub {
                my $doc = shift;
                my $counter = {};
                my $values = $doc->get_all('95[POR]');
                for my $v (@$values) {
                    if ($v =~ /(INT2|INT1|ACCW|BENM)/) {
                        $counter->{$1}++;
                    }
                }
                for my $k (keys %$counter) {
                    if ($counter->{$k} > 1) {
                        return 0;
                    }
                }
                return 1;
            },
            err => 'E84',
        },

        # С5 Если в последовательности B Детали позиции неттинга, в подпоследовательности B1 Стороны
        # содержат поле :95а::INT2 Второй посредник, то поле :95а::INT1 Посредник должно присутствовать
        # в другой подпоследовательности В1 Стороны (Код ошибки D11).
        {
            if => ['match_any', '95[POR]', 'INT2'],
            must => ['match_any', '95[POR]', 'INT1'],
            err => 'D11',
        },
    ]
};

1;